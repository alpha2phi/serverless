service: ml-api

# Create an optimized package for our functions
package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - mllib/__pycache__/**
    - mllib/test_images/**
    - mllib/hello.py
    - mllib/__pycache__/**
    - __pycache__/**
    - .DS_Store
    - package.json
    - package-lock.json
    - node_modules/**
    - cache/**
    - tests/**
    - test_images/**
    - layers/**

plugins:
  - serverless-python-requirements
  - serverless-offline
  - serverless-plugin-warmup

custom:
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  pythonRequirements:
    dockerizePip: true
    zip: true
    slim: true
    strip: false
    nodeploy:
      - pip
      - setuptools
      - six
    usestaticcache: true
    usedownloadcache: true
    cachelocation: "/mnt/efs/.cache"
    # layer: true

  warmup:
    events:
      - schedule: "rate(5 minutes)"
    timeout: 50
    default:
      enabled: true
      role: IamRoleLambdaExecution

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  timeout: 60
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"

  # support for all binary media types
  apiGateway:
    binaryMediaTypes:
      - '*/*'

  # you can overwrite defaults here
  stage: dev
  region: ap-southeast-1

functions:
  vision:
    handler: mllib/vision.main
    fileSystemConfig:
      localMountPath: /mnt/efs
      arn: arn:aws:elasticfilesystem:ap-southeast-1:450266975445:access-point/fsap-069947df394f6436c
    iamManagedPolicies:
      - arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess
    vpc:
      securityGroupIds:
        - sg-9cae01ec
      subnetIds:
        - subnet-ee22e788
    memorySize: 3008
    timeout: 300
    # layers:
    #   - { Ref: PythonRequirementsLambdaLayer }
    events:
      - httpApi:
          path: /vision
          method: post
    warmup:
      default:
        enabled: true

  # hello:
  #   handler: mllib/hello.main
  #   events:
  #     - httpApi:
  #         path: /hello
  #         method: get
